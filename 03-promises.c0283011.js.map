{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAExCF,EAASG,iBAAiB,SAK1B,SAAoBC,GACnBC,EAAeD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOE,K,IAL9CR,EAASG,iBAAiB,UAQ1B,SAAqBC,GAEjBA,EAAIK,iBACJL,EAAIM,cAAcC,QAClB,MAAMC,EAAQC,OAAOR,EAAeO,OAC9BE,EAAOD,OAAOR,EAAeS,MAC7BC,EAAWF,OAAOR,EAAeW,QAEvC,IAAK,IAAIC,EAAI,EAAGC,EAAaN,EAAOK,GAAKF,EAAUE,GAAK,EAAGC,GAAcJ,EAErEK,EAAcF,EAAGC,GAChBE,MAAK,KACFC,QAAQC,IAAI,uBAAqBL,QAAUC,OAC3CK,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBR,QAAUC,MAAe,IAEzEQ,OAAM,KACHL,QAAQC,IAAI,sBAAoBL,QAAUC,OAC1CK,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoBV,QAAQC,MAAe,G,IAvB/E,MAAMb,EAAiB,GA4BvB,SAASc,EAAcF,EAAGC,GAEtB,OAAO,IAAIU,SAAQ,CAACC,EAAKC,KACrBC,YAAW,KACWC,KAAKC,SAAW,GAEpCJ,EAAIZ,EAAGC,GAEPY,EAAIb,EAAGC,EAAW,GAEjBA,EAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formData = document.querySelector(\".form\");\n\nformData.addEventListener(\"input\", inputDate);\nformData.addEventListener(\"submit\", submitForm);\n\nconst inputValueData = {}\n\nfunction inputDate (evt) {\n inputValueData[evt.target.name] = evt.target.value;\n}\n\nfunction submitForm (evt) {\n    \n    evt.preventDefault();\n    evt.currentTarget.reset()\n    const delay = Number(inputValueData.delay);\n    const step = Number(inputValueData.step);\n    const position = Number(inputValueData.amount);\n    \n    for (let i = 1, delayScore = delay; i <= position; i += 1, delayScore += step) {\n\n        createPromise(i, delayScore)\n        .then(() => {\n            console.log(`✅ Fulfilled promise ${i} in ${delayScore}ms`);\n            Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delayScore}ms`);\n        })\n        .catch(() => {\n            console.log(`❌ Rejected promise ${i} in ${delayScore}ms`);\n            Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delayScore}ms`);\n        });\n    }\n}\n\nfunction createPromise(i, delayScore) {\n\n    return new Promise((res, rej) => { \n        setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          res(i, delayScore);\n        } else {\n          rej(i, delayScore);\n        }    \n        }, delayScore);\n    });\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formData","document","querySelector","addEventListener","evt","$47d4ff9957288465$var$inputValueData","target","name","value","preventDefault","currentTarget","reset","delay","Number","step","position","amount","i","delayScore","$47d4ff9957288465$var$createPromise","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","Promise","res","rej","setTimeout","Math","random"],"version":3,"file":"03-promises.c0283011.js.map"}